# Kubernetes Deployment example with rolling update strategy
# Deployment manages a set of replica pods using ReplicaSet and supports declarative updates.
# Software update to daemonsets are by default using the rolling update strategy. If you update
# the container image or any other parameters under the template section, then all the daemonset
# pods will be recreated to apply the changes. Rollout is by default handled one after another for
# every node. This can be controlled via maxUnavailable and maxSurge parameters.
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mydep-rollingupdate
spec:
  replicas: 3
  selector:
    matchLabels:
      app: mydep-rollingupdate
  strategy:
    type: RollingUpdate   # default strategy
    rollingUpdate:
      maxSurge: 1           # 1 extra pod can be created during rollout
      maxUnavailable: 0     # Do not fall from the range of configured replicas count
  template:
    metadata:
      labels:
        app: mydep-rollingupdate
    spec:
      containers:
        - image: nginx:latest
          name: main
          ports: # information purpose only
            - containerPort: 80
              protocol: TCP
